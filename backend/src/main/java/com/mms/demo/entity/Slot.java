package com.mms.demo.entity;

import java.time.DayOfWeek;
import java.time.LocalTime;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/**
 * The Slot class represents a table of the same name in the database. Encapsulates the details
 * needed to define a Slot. Slots are defined at a weekly basis and constantly cleaned out once they
 * expire, to be replaced by new slots. Slots are mapped to Doctors through the Schedule table.
 * <p>
 * Supports a Builder() as well as a toBuilder(), which are the preferred methods of constructing an
 * object of this class.
 * 
 * @author Mananveer Singh
 */
@Setter
@Getter
@AllArgsConstructor
@NoArgsConstructor
@Builder(toBuilder = true)
@EqualsAndHashCode
@Entity
@ToString
@Table(name = "SLOT", schema = "MMSYSTEM")
public class Slot {
    /**
     * The Primary Key. Autogenerated by the DBMS on the creation of an entry.
     * 
     */
    @Id
    @Column(name = "slot_id")
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    /**
     * The week day the slot is scheduled on.
     */
    @Column(name = "slot_weekday", nullable = false)
    private DayOfWeek weekday;


    /**
     * The starting time.
     */
    @Column(name = "slot_start", nullable = false)
    @Temporal(TemporalType.TIME)
    private LocalTime start;

    /**
     * The ending time.
     * 
     */
    @Column(name = "slot_end", nullable = false)
    @Temporal(TemporalType.TIME)
    private LocalTime end;

    /**
     * The capacity of the slot. More specifically, how many individual Patients can share the same
     * Slot. Calculated by counting the number of Appointment entries with the same slot.
     * 
     * @see Appointment
     */
    @Column(name = "slot_capacity", nullable = false)
    @Builder.Default
    private Integer capacity = 1;
}
