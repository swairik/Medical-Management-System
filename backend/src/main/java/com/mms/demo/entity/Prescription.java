package com.mms.demo.entity;

import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.Lob;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/**
 * The Prescription class represents a table of the same name in the database. It contains the data
 * required to uniquely identify an appointment and stores the actual prescription text as a byte
 * array.
 * <p>
 * Supports a Builder() as well as a toBuilder(), which are the preferred methods of constructing
 * objects of this class.
 * 
 * @author Mananveer Singh
 */
@Entity
@Table(name = "PRESCRIPTION", schema = "MMSYSTEM")
@ToString
@Getter
@Setter
@Builder(toBuilder = true)
@EqualsAndHashCode
@AllArgsConstructor
@NoArgsConstructor
public class Prescription {
    /**
     * The Primary Key. Autogenerated by the DBMS on the creation of an entry.
     */
    @Id
    @Column(name = "prescription_id")
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    // /**
    // * A reference to the prescribing doctor.
    // */
    // @ManyToOne(fetch = FetchType.EAGER, optional = false)
    // @JoinColumn(referencedColumnName = "doctor_id", nullable = false)
    // private Doctor doctor;

    // /**
    // * A reference to the patient that owns the prescription.
    // */
    // @ManyToOne(fetch = FetchType.EAGER, optional = false)
    // @JoinColumn(referencedColumnName = "patient_id", nullable = false)
    // private Patient patient;

    // /**
    // * A reference to the appointment during which the prescription was created.
    // */
    // @OneToOne(fetch = FetchType.EAGER, optional = false)
    // @JoinColumn(referencedColumnName = "appointment_id", nullable = false)
    // private Appointment appointment;

    // /**
    // * A timestamp marking the creation of the prescription.
    // */
    // @Column(name = "prescription_timestamp")
    // @Builder.Default
    // private LocalDateTime stamp = LocalDateTime.now().truncatedTo(ChronoUnit.SECONDS);

    /**
     * The raw contents of the prescription.
     */
    @Lob
    @Column(name = "prescription_contents", length = 100000)
    private byte[] contents;
}
