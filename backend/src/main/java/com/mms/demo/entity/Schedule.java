package com.mms.demo.entity;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.temporal.ChronoField;
import io.micrometer.common.lang.NonNull;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/**
 * The Schedule class maps ownership of Slots to Doctors. Doctors can have multiple slots assigned
 * to them, but a Slot is only assigned to one Doctor. Schedules need to be approved by the admin
 * before they are visible to patients for scheduling.
 * <p>
 * Supports a Builder() as well as a toBuilder(), which are the preferred methods of constructing
 * objects of this class.
 * 
 * @author Mananveer Singh
 */
@Entity
@Table(name = "SCHEDULE", schema = "MMSYSTEM")
@ToString
@Getter
@Setter
@Builder(toBuilder = true)
@EqualsAndHashCode
@AllArgsConstructor
@NoArgsConstructor
public class Schedule {
    /**
     * The Primary Key. Autogenerated by the DBMS on the creation of an entry.
     * 
     */
    @Id
    @Column(name = "schedule_id")
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    /**
     * A reference to a Doctor object. The object needs to be an existing, persistent entity.
     *
     * 
     */
    @ManyToOne(fetch = FetchType.EAGER, optional = false)
    @JoinColumn(referencedColumnName = "doctor_id", nullable = false)
    private Doctor doctor;

    @NonNull
    @Column(name = "schedule_start", nullable = false)
    private LocalDateTime start;

    @Column(name = "schedule_end", nullable = false)
    private LocalDateTime end;

    /**
     * A flag representing whether the schedule has been approved by the admin or not.
     * 
     */
    @Column(name = "schedule_approval", nullable = false)
    @Builder.Default
    private Boolean approvalStatus = false;

    @Column(name = "schedule_booked", nullable = false)
    @Builder.Default
    private Boolean booked = false;
}
